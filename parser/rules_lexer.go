// Code generated from parser/Rules.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 27, 207,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 3, 2, 3, 2, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3,
	7, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16,
	3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 22, 3, 22, 5, 22, 125, 10, 22, 3, 23, 3, 23, 3, 24, 3, 24, 7, 24,
	131, 10, 24, 12, 24, 14, 24, 134, 11, 24, 3, 24, 3, 24, 3, 25, 3, 25, 7,
	25, 140, 10, 25, 12, 25, 14, 25, 143, 11, 25, 3, 26, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 5, 26, 154, 10, 26, 3, 27, 3, 27, 3,
	28, 6, 28, 159, 10, 28, 13, 28, 14, 28, 160, 3, 29, 3, 29, 3, 30, 5, 30,
	166, 10, 30, 3, 30, 3, 30, 3, 31, 6, 31, 171, 10, 31, 13, 31, 14, 31, 172,
	3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 5, 32, 183, 10,
	32, 3, 33, 6, 33, 186, 10, 33, 13, 33, 14, 33, 187, 3, 33, 3, 33, 3, 34,
	3, 34, 3, 35, 5, 35, 195, 10, 35, 3, 36, 3, 36, 5, 36, 199, 10, 36, 3,
	37, 6, 37, 202, 10, 37, 13, 37, 14, 37, 203, 3, 37, 3, 37, 2, 2, 38, 3,
	3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 23, 45, 24, 47, 25, 49, 26, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61,
	2, 63, 2, 65, 2, 67, 2, 69, 2, 71, 2, 73, 27, 3, 2, 8, 3, 2, 50, 59, 4,
	2, 45, 45, 47, 47, 5, 2, 106, 106, 111, 111, 117, 117, 6, 2, 12, 12, 15,
	15, 36, 36, 94, 94, 5, 2, 67, 92, 97, 97, 99, 124, 5, 2, 11, 12, 15, 15,
	34, 34, 2, 207, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2,
	9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2,
	2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2,
	2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2,
	2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3,
	2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47,
	3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 3, 75, 3, 2, 2, 2, 5,
	77, 3, 2, 2, 2, 7, 79, 3, 2, 2, 2, 9, 81, 3, 2, 2, 2, 11, 84, 3, 2, 2,
	2, 13, 87, 3, 2, 2, 2, 15, 90, 3, 2, 2, 2, 17, 93, 3, 2, 2, 2, 19, 95,
	3, 2, 2, 2, 21, 98, 3, 2, 2, 2, 23, 100, 3, 2, 2, 2, 25, 103, 3, 2, 2,
	2, 27, 106, 3, 2, 2, 2, 29, 108, 3, 2, 2, 2, 31, 110, 3, 2, 2, 2, 33, 112,
	3, 2, 2, 2, 35, 114, 3, 2, 2, 2, 37, 116, 3, 2, 2, 2, 39, 118, 3, 2, 2,
	2, 41, 120, 3, 2, 2, 2, 43, 124, 3, 2, 2, 2, 45, 126, 3, 2, 2, 2, 47, 128,
	3, 2, 2, 2, 49, 137, 3, 2, 2, 2, 51, 153, 3, 2, 2, 2, 53, 155, 3, 2, 2,
	2, 55, 158, 3, 2, 2, 2, 57, 162, 3, 2, 2, 2, 59, 165, 3, 2, 2, 2, 61, 170,
	3, 2, 2, 2, 63, 182, 3, 2, 2, 2, 65, 185, 3, 2, 2, 2, 67, 191, 3, 2, 2,
	2, 69, 194, 3, 2, 2, 2, 71, 198, 3, 2, 2, 2, 73, 201, 3, 2, 2, 2, 75, 76,
	7, 46, 2, 2, 76, 4, 3, 2, 2, 2, 77, 78, 7, 93, 2, 2, 78, 6, 3, 2, 2, 2,
	79, 80, 7, 95, 2, 2, 80, 8, 3, 2, 2, 2, 81, 82, 7, 40, 2, 2, 82, 83, 7,
	40, 2, 2, 83, 10, 3, 2, 2, 2, 84, 85, 7, 126, 2, 2, 85, 86, 7, 126, 2,
	2, 86, 12, 3, 2, 2, 2, 87, 88, 7, 63, 2, 2, 88, 89, 7, 63, 2, 2, 89, 14,
	3, 2, 2, 2, 90, 91, 7, 35, 2, 2, 91, 92, 7, 63, 2, 2, 92, 16, 3, 2, 2,
	2, 93, 94, 7, 62, 2, 2, 94, 18, 3, 2, 2, 2, 95, 96, 7, 62, 2, 2, 96, 97,
	7, 63, 2, 2, 97, 20, 3, 2, 2, 2, 98, 99, 7, 64, 2, 2, 99, 22, 3, 2, 2,
	2, 100, 101, 7, 64, 2, 2, 101, 102, 7, 63, 2, 2, 102, 24, 3, 2, 2, 2, 103,
	104, 7, 107, 2, 2, 104, 105, 7, 112, 2, 2, 105, 26, 3, 2, 2, 2, 106, 107,
	7, 45, 2, 2, 107, 28, 3, 2, 2, 2, 108, 109, 7, 47, 2, 2, 109, 30, 3, 2,
	2, 2, 110, 111, 7, 44, 2, 2, 111, 32, 3, 2, 2, 2, 112, 113, 7, 49, 2, 2,
	113, 34, 3, 2, 2, 2, 114, 115, 7, 39, 2, 2, 115, 36, 3, 2, 2, 2, 116, 117,
	7, 42, 2, 2, 117, 38, 3, 2, 2, 2, 118, 119, 7, 43, 2, 2, 119, 40, 3, 2,
	2, 2, 120, 121, 5, 51, 26, 2, 121, 42, 3, 2, 2, 2, 122, 125, 5, 59, 30,
	2, 123, 125, 5, 61, 31, 2, 124, 122, 3, 2, 2, 2, 124, 123, 3, 2, 2, 2,
	125, 44, 3, 2, 2, 2, 126, 127, 5, 65, 33, 2, 127, 46, 3, 2, 2, 2, 128,
	132, 7, 36, 2, 2, 129, 131, 5, 67, 34, 2, 130, 129, 3, 2, 2, 2, 131, 134,
	3, 2, 2, 2, 132, 130, 3, 2, 2, 2, 132, 133, 3, 2, 2, 2, 133, 135, 3, 2,
	2, 2, 134, 132, 3, 2, 2, 2, 135, 136, 7, 36, 2, 2, 136, 48, 3, 2, 2, 2,
	137, 141, 5, 69, 35, 2, 138, 140, 5, 71, 36, 2, 139, 138, 3, 2, 2, 2, 140,
	143, 3, 2, 2, 2, 141, 139, 3, 2, 2, 2, 141, 142, 3, 2, 2, 2, 142, 50, 3,
	2, 2, 2, 143, 141, 3, 2, 2, 2, 144, 145, 7, 118, 2, 2, 145, 146, 7, 116,
	2, 2, 146, 147, 7, 119, 2, 2, 147, 154, 7, 103, 2, 2, 148, 149, 7, 104,
	2, 2, 149, 150, 7, 99, 2, 2, 150, 151, 7, 110, 2, 2, 151, 152, 7, 117,
	2, 2, 152, 154, 7, 103, 2, 2, 153, 144, 3, 2, 2, 2, 153, 148, 3, 2, 2,
	2, 154, 52, 3, 2, 2, 2, 155, 156, 9, 2, 2, 2, 156, 54, 3, 2, 2, 2, 157,
	159, 5, 53, 27, 2, 158, 157, 3, 2, 2, 2, 159, 160, 3, 2, 2, 2, 160, 158,
	3, 2, 2, 2, 160, 161, 3, 2, 2, 2, 161, 56, 3, 2, 2, 2, 162, 163, 9, 3,
	2, 2, 163, 58, 3, 2, 2, 2, 164, 166, 5, 57, 29, 2, 165, 164, 3, 2, 2, 2,
	165, 166, 3, 2, 2, 2, 166, 167, 3, 2, 2, 2, 167, 168, 5, 55, 28, 2, 168,
	60, 3, 2, 2, 2, 169, 171, 5, 59, 30, 2, 170, 169, 3, 2, 2, 2, 171, 172,
	3, 2, 2, 2, 172, 170, 3, 2, 2, 2, 172, 173, 3, 2, 2, 2, 173, 174, 3, 2,
	2, 2, 174, 175, 7, 48, 2, 2, 175, 176, 5, 55, 28, 2, 176, 62, 3, 2, 2,
	2, 177, 178, 7, 112, 2, 2, 178, 183, 7, 117, 2, 2, 179, 180, 7, 111, 2,
	2, 180, 183, 7, 117, 2, 2, 181, 183, 9, 4, 2, 2, 182, 177, 3, 2, 2, 2,
	182, 179, 3, 2, 2, 2, 182, 181, 3, 2, 2, 2, 183, 64, 3, 2, 2, 2, 184, 186,
	5, 59, 30, 2, 185, 184, 3, 2, 2, 2, 186, 187, 3, 2, 2, 2, 187, 185, 3,
	2, 2, 2, 187, 188, 3, 2, 2, 2, 188, 189, 3, 2, 2, 2, 189, 190, 5, 63, 32,
	2, 190, 66, 3, 2, 2, 2, 191, 192, 10, 5, 2, 2, 192, 68, 3, 2, 2, 2, 193,
	195, 9, 6, 2, 2, 194, 193, 3, 2, 2, 2, 195, 70, 3, 2, 2, 2, 196, 199, 5,
	69, 35, 2, 197, 199, 4, 50, 59, 2, 198, 196, 3, 2, 2, 2, 198, 197, 3, 2,
	2, 2, 199, 72, 3, 2, 2, 2, 200, 202, 9, 7, 2, 2, 201, 200, 3, 2, 2, 2,
	202, 203, 3, 2, 2, 2, 203, 201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2, 204,
	205, 3, 2, 2, 2, 205, 206, 8, 37, 2, 2, 206, 74, 3, 2, 2, 2, 15, 2, 124,
	132, 141, 153, 160, 165, 172, 182, 187, 194, 198, 203, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "','", "'['", "']'", "'&&'", "'||'", "'=='", "'!='", "'<'", "'<='",
	"'>'", "'>='", "'in'", "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "AND", "OR", "EQ", "NEQ", "LT", "LTE", "GT", "GTE", "IN",
	"ADD", "SUB", "MUL", "DIV", "MOD", "LPARENT", "RPARENT", "BooleanLiteral",
	"NumberLiteral", "DurationLiteral", "StringLiteral", "Identifier", "WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "AND", "OR", "EQ", "NEQ", "LT", "LTE", "GT", "GTE",
	"IN", "ADD", "SUB", "MUL", "DIV", "MOD", "LPARENT", "RPARENT", "BooleanLiteral",
	"NumberLiteral", "DurationLiteral", "StringLiteral", "Identifier", "BOOL",
	"DIGIT", "DIGIT_SEQUENCE", "SIGN", "INTEGER", "FLOAT", "TIME_UNIT", "DURATION",
	"CHAR_SEQUENCE", "ID_START", "ID_CHAR", "WS",
}

type RulesLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewRulesLexer(input antlr.CharStream) *RulesLexer {

	l := new(RulesLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Rules.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// RulesLexer tokens.
const (
	RulesLexerT__0            = 1
	RulesLexerT__1            = 2
	RulesLexerT__2            = 3
	RulesLexerAND             = 4
	RulesLexerOR              = 5
	RulesLexerEQ              = 6
	RulesLexerNEQ             = 7
	RulesLexerLT              = 8
	RulesLexerLTE             = 9
	RulesLexerGT              = 10
	RulesLexerGTE             = 11
	RulesLexerIN              = 12
	RulesLexerADD             = 13
	RulesLexerSUB             = 14
	RulesLexerMUL             = 15
	RulesLexerDIV             = 16
	RulesLexerMOD             = 17
	RulesLexerLPARENT         = 18
	RulesLexerRPARENT         = 19
	RulesLexerBooleanLiteral  = 20
	RulesLexerNumberLiteral   = 21
	RulesLexerDurationLiteral = 22
	RulesLexerStringLiteral   = 23
	RulesLexerIdentifier      = 24
	RulesLexerWS              = 25
)
